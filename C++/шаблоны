Они помогают писать для функций скелет,то есть в шаблонах не важен будет тип данных.Благодаря шаблонам не приходится перегружать функции(см.пример перегруженных функ-ий ниже),можно просто обощить все типы данных.
int Max(int x, int y) {
    if (x > y) {
        return x;
    } else {
        return y;
    }
}
 
double Max(double x, double y) {
    if (x > y) {
        return x;
    } else {
        return y;
    }
}
 
std::string Max(const std::string& x, const std::string& y) {
    if (x > y) {
        return x;
    } else {
        return y;
    }
}
Используем шаблон:
template <typename T>
T Max(const T& x, const T& y) {
    if (x > y) {
        return x;
    } else {
        return y;
    }
}
Также можно использовтаь их в структурах,чтобы запихивать разные типы данных в структуру,а не какие то определенные.Например:
 
template <typename T1, typename T2, typename T3>
struct Triple {
    T1 first;
    T2 second;
    T3 third;
};
 
int main() {
    Triple<int, int, int> point = {-1, 3, 2};
    Triple<std::string, std::string, int> wordPairsFreq = {"hello", "world", 42};
}
